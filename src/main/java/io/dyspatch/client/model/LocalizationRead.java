/*
 * Dyspatch API
 * # Introduction  The Dyspatch API is based on the REST paradigm, and features resource based URLs with standard HTTP response codes to indicate errors. We use standard HTTP authentication and request verbs, and all responses are JSON formatted. See our [Implementation Guide](https://docs.dyspatch.io/development/implementing_dyspatch/) for more details on how to implement Dyspatch.  ## API Client Libraries  Dyspatch provides API Clients for popular languages and web frameworks.   - [Java](https://github.com/getdyspatch/dyspatch-java) - [Javascript](https://github.com/getdyspatch/dyspatch-javascript) - [Python](https://github.com/getdyspatch/dyspatch-python) - [C#](https://github.com/getdyspatch/dyspatch-dotnet) - [Go](https://github.com/getdyspatch/dyspatch-golang) - [Ruby](https://github.com/getdyspatch/dyspatch-ruby) 
 *
 * OpenAPI spec version: 2019.03
 * Contact: support@dyspatch.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.dyspatch.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.dyspatch.client.model.CompiledRead;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import org.threeten.bp.OffsetDateTime;

/**
 * LocalizationRead
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2019-06-06T15:58:00.720-07:00[America/Vancouver]")public class LocalizationRead {

  @SerializedName("id")
  private String id = null;

  @SerializedName("language")
  private String language = null;

  @SerializedName("url")
  private String url = null;

  @SerializedName("template")
  private String template = null;

  @SerializedName("compiled")
  private CompiledRead compiled = null;

  @SerializedName("createdAt")
  private OffsetDateTime createdAt = null;

  @SerializedName("updatedAt")
  private OffsetDateTime updatedAt = null;

  @SerializedName("name")
  private String name = null;
  public LocalizationRead id(String id) {
    this.id = id;
    return this;
  }

  

  /**
  * An opaque, unique identifier for a localization
  * @return id
  **/
  @Schema(example = "loc_g3L7Cw6Hp5wUaf395LehwK", description = "An opaque, unique identifier for a localization")
  public String getId() {
    return id;
  }
  public void setId(String id) {
    this.id = id;
  }
  public LocalizationRead language(String language) {
    this.language = language;
    return this;
  }

  

  /**
  * A language identifier comprised of a language and a country identifier.  See [supported languages](https://docs.dyspatch.io/localization/supported_languages/). 
  * @return language
  **/
  @Schema(example = "en-US", description = "A language identifier comprised of a language and a country identifier.  See [supported languages](https://docs.dyspatch.io/localization/supported_languages/). ")
  public String getLanguage() {
    return language;
  }
  public void setLanguage(String language) {
    this.language = language;
  }
  public LocalizationRead url(String url) {
    this.url = url;
    return this;
  }

  

  /**
  * The API url for a specific localization
  * @return url
  **/
  @Schema(example = "/localizations/loc_g3L7Cw6Hp5wUaf395LehwK", description = "The API url for a specific localization")
  public String getUrl() {
    return url;
  }
  public void setUrl(String url) {
    this.url = url;
  }
  public LocalizationRead template(String template) {
    this.template = template;
    return this;
  }

  

  /**
  * An opaque, unique identifier for a template
  * @return template
  **/
  @Schema(example = "tem_g3L7Cw6Hp5wU", description = "An opaque, unique identifier for a template")
  public String getTemplate() {
    return template;
  }
  public void setTemplate(String template) {
    this.template = template;
  }
  public LocalizationRead compiled(CompiledRead compiled) {
    this.compiled = compiled;
    return this;
  }

  

  /**
  * Get compiled
  * @return compiled
  **/
  @Schema(description = "")
  public CompiledRead getCompiled() {
    return compiled;
  }
  public void setCompiled(CompiledRead compiled) {
    this.compiled = compiled;
  }
  public LocalizationRead createdAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
    return this;
  }

  

  /**
  * The time of initial creation
  * @return createdAt
  **/
  @Schema(description = "The time of initial creation")
  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }
  public void setCreatedAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }
  public LocalizationRead updatedAt(OffsetDateTime updatedAt) {
    this.updatedAt = updatedAt;
    return this;
  }

  

  /**
  * The time of last update
  * @return updatedAt
  **/
  @Schema(description = "The time of last update")
  public OffsetDateTime getUpdatedAt() {
    return updatedAt;
  }
  public void setUpdatedAt(OffsetDateTime updatedAt) {
    this.updatedAt = updatedAt;
  }
  public LocalizationRead name(String name) {
    this.name = name;
    return this;
  }

  

  /**
  * The user-specified name of a localization
  * @return name
  **/
  @Schema(example = "English (US)", description = "The user-specified name of a localization")
  public String getName() {
    return name;
  }
  public void setName(String name) {
    this.name = name;
  }
  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LocalizationRead localizationRead = (LocalizationRead) o;
    return Objects.equals(this.id, localizationRead.id) &&
        Objects.equals(this.language, localizationRead.language) &&
        Objects.equals(this.url, localizationRead.url) &&
        Objects.equals(this.template, localizationRead.template) &&
        Objects.equals(this.compiled, localizationRead.compiled) &&
        Objects.equals(this.createdAt, localizationRead.createdAt) &&
        Objects.equals(this.updatedAt, localizationRead.updatedAt) &&
        Objects.equals(this.name, localizationRead.name);
  }

  @Override
  public int hashCode() {
    return java.util.Objects.hash(id, language, url, template, compiled, createdAt, updatedAt, name);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LocalizationRead {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    language: ").append(toIndentedString(language)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    template: ").append(toIndentedString(template)).append("\n");
    sb.append("    compiled: ").append(toIndentedString(compiled)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
